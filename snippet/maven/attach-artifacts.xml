<profiles>
	<profile>
		<id>activate-with-docker-compose.yml</id>
		<activation>
			<activeByDefault>false</activeByDefault>
			<file>
				<exists>src/main/docker/docker-compose.yml</exists>
			</file>
		</activation>
		<build>
			<plugins>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.0.2</version>
					<executions>
						<execution>
							<id>copy-resources</id>
							<!-- here the phase you need -->
							<phase>generate-resources</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${project.build.outputDirectory}
								</outputDirectory>
								<resources>
									<resource>
										<directory>src/main/docker</directory>
										<filtering>true</filtering>
										<targetPath>${project.build.directory}</targetPath>
									</resource>
									<resource>
										<directory>src/main/nonfiltered</directory>
										<filtering>false</filtering>
										<targetPath>${project.build.directory}</targetPath>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>1.2.1</version>
					<executions>
						<execution>
							<id>build-images</id>
							<phase>package</phase>
							<goals>
								<goal>exec</goal>
							</goals>
							<configuration>
								<workingDirectory>${project.build.directory}</workingDirectory>
								<executable>docker-compose</executable>
								<commandlineArgs>build</commandlineArgs>
							</configuration>
						</execution>
						<execution>
							<id>tag-as-hub-image</id>
							<phase>package</phase>
							<goals>
								<goal>exec</goal>
							</goals>
							<configuration>
								<workingDirectory>${project.build.directory}</workingDirectory>
								<executable>docker</executable>
								<commandlineArgs>tag
									${repo}/${org.prefix}/${project.artifactId}${service.suffix}:${project.version}
									${hub}/${org.prefix}/${project.artifactId}${service.suffix}:${project.version}
								</commandlineArgs>
							</configuration>
						</execution>
						<execution>
							<id>tag-as-latest-hub</id>
							<phase>package</phase>
							<goals>
								<goal>exec</goal>
							</goals>
							<configuration>
								<workingDirectory>${project.build.directory}</workingDirectory>
								<executable>docker</executable>
								<commandlineArgs>tag
									${repo}/${org.prefix}/${project.artifactId}${service.suffix}:${project.version}
									${hub}/${org.prefix}/${project.artifactId}${service.suffix}:latest
								</commandlineArgs>
							</configuration>
						</execution>
						<execution>
							<id>push-base-images-to-nexus</id>
							<phase>deploy</phase>
							<goals>
								<goal>exec</goal>
							</goals>
							<configuration>
								<workingDirectory>${project.build.directory}</workingDirectory>
								<executable>docker-compose</executable>
								<commandlineArgs>push</commandlineArgs>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</build>
	</profile>
	<profile><!-- attach docker-compose-runner.yml as a project artifact -->
		<id>activate-with-docker-compose-runner.yml</id>
		<activation>
			<activeByDefault>false</activeByDefault>
			<file>
				<exists>src/main/docker/docker-compose-runner.yml</exists>
			</file>
		</activation>
		<build>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.12</version>
					<executions>
						<execution>
							<id>attach-artifacts</id>
							<phase>package</phase>
							<goals>
								<goal>attach-artifact</goal>
							</goals>
							<configuration>
								<artifacts>
									<artifact>
										<file>${project.build.directory}/docker-compose-runner.yml
										</file>
										<type>yml</type>
										<classifier>docker-compose</classifier>
									</artifact>
								</artifacts>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</build>
	</profile>
</profiles>