<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	
	
	<modelVersion>4.0.0</modelVersion>
	<groupId>java.snippet</groupId>
	<artifactId>docker-pom</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	
	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
    	<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>ISO-8859-15</project.build.sourceEncoding>
		<base.image>centos</base.image>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>2.5.12</version>
		</dependency>
	</dependencies>

	<build>
	    <finalName>example</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.2</version>
				<executions>
					<execution>
						<id>copy-extra-resources</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.outputDirectory}</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/docker</directory>
									<filtering>true</filtering>
									<targetPath>${project.build.directory}</targetPath>
								</resource>
								<resource>
									<directory>src/main/nonfiltered</directory>
									<filtering>false</filtering>
									<targetPath>${project.build.directory}</targetPath>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>2.1.0.RELEASE</version>
				<executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <classifier>spring-boot</classifier>                            
                        </configuration>
                    </execution>
                </executions>
			</plugin>
			
		</plugins>
	</build>
	
	<profiles>
		<profile>
			<id>activate-with-docker-compose.yml</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<file>
					<exists>src/main/docker/docker-compose.yml</exists>
				</file>
			</activation>
			<build>
				<plugins>					
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>build-images</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<workingDirectory>${project.build.directory}</workingDirectory>
									<executable>docker-compose</executable>
									<commandlineArgs>build --force-rm</commandlineArgs>
								</configuration>
							</execution>						
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>